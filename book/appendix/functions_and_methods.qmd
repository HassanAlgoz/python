# مرجع الإجراءات والأفعال

## الأعداد (الأعداد الصحيحة `int` والأعداد العشرية `float`)

## القائمة (القوائم `list`)

## القاموس (القواميس `dict`)

## المجموعة (المجموعات `set`)

## النص (`str`)

### إجراءات مبنيَّة

| الإجراء | الوصف |
|---|---|
| `len(obj) -> int` | لمعرفة عدد العناصر.<br>• `obj`: كائن قابل للعد مثل السلسلة النصية أو القائمة. |
| `print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False)` | طباعة.<br>• `objects`: الكائنات المراد طباعتها.<br>• `sep`: الفاصل بين الكائنات (افتراضيًا مسافة).<br>• `end`: النهاية (افتراضيًا سطر جديد).<br>• `file`: وجهة الطباعة (افتراضيًا الشاشة).<br>• `flush`: تنظيف المخزن المؤقت فورًا. |
| `ord(c) -> int` | لمعرفة رمز Unicode لحرف.<br>• `c`: حرف واحد كسلسلة نصية. |
| `int(x=0, base=10) -> int` | تحويل سلسلة نصية إلى عدد صحيح.<br>• `x`: القيمة المراد تحويلها.<br>• `base`: النظام العددي (افتراضيًا عشري). |
| `float(x) -> float` | تحويل سلسلة نصية إلى عدد عشري.<br>• `x`: القيمة المراد تحويلها. |

### أفعال شائعة الاستعمال

| الفعل | الوصف |
|---|---|
| `str.upper() -> str` | تحويل السلسلة النصية إلى أحرف كبيرة. |
| `str.lower() -> str` | تحويل السلسلة النصية إلى أحرف صغيرة. |
| `str.find(sub[, start[, end]]) -> int` | البحث عن موضع سلسلة نصية فرعية داخل سلسلة نصية.<br>• `sub`: السلسلة النصية المراد البحث عنها.<br>• `start`: موضع بداية البحث (اختياري).<br>• `end`: موضع نهاية البحث (اختياري). |
| `str.replace(old, new[, count]) -> str` | استبدال تكرارات سلسلة نصية فرعية داخل سلسلة نصية.<br>• `old`: السلسلة النصية المراد استبدالها.<br>• `new`: السلسلة النصية البديلة.<br>• `count`: عدد مرات الاستبدال (اختياري). |
| `str.split(sep=None, maxsplit=-1) -> list` | تقسيم السلسلة النصية إلى قائمة من السلاسل النصية الفرعية.<br>• `sep`: المحدد (افتراضيًا المسافات البيضاء).<br>• `maxsplit`: أقصى عدد للتقسيمات. |
| `str.join(iterable) -> str` | دمج عناصر من iterable إلى سلسلة نصية باستخدام فاصل.<br>• `iterable`: مجموعة من السلاسل النصية. |
| `str.strip([chars]) -> str` | إزالة المسافات البيضاء من بداية ونهاية السلسلة النصية.<br>• `chars`: الأحرف المراد إزالتها (اختياري). |
| `str.startswith(prefix[, start[, end]]) -> bool` | التحقق مما إذا كانت السلسلة النصية تبدأ بمقدمة محددة.<br>• `prefix`: المقدمة المراد التحقق منها.<br>• `start`: موضع بداية البحث (اختياري).<br>• `end`: موضع نهاية البحث (اختياري). |
| `str.endswith(suffix[, start[, end]]) -> bool` | التحقق مما إذا كانت السلسلة النصية تنتهي بنهاية محددة.<br>• `suffix`: النهاية المراد التحقق منها.<br>• `start`: موضع بداية البحث (اختياري).<br>• `end`: موضع نهاية البحث (اختياري). |
| `str.count(sub[, start[, end]]) -> int` | عد عدد تكرارات سلسلة نصية فرعية داخل سلسلة نصية.<br>• `sub`: السلسلة النصية المراد عدها.<br>• `start`: موضع بداية البحث (اختياري).<br>• `end`: موضع نهاية البحث (اختياري). |
| `str.format(*args, **kwargs) -> str` | إنشاء سلسلة نصية منسقة باستخدام عناصر نائبة.<br>• `args`: المتغيرات المراد تنسيقها بالترتيب.<br>• `kwargs`: المتغيرات المراد تنسيقها بالاسم. |

### أفعال معروفة

| الفعل | الوصف |
|---|---|
| `str.encode(encoding='utf-8', errors='strict') -> bytes` | ترميز السلسلة النصية باستخدام ترميز محدد.<br>• `encoding`: نوع الترميز.<br>• `errors`: كيفية معالجة الأخطاء. |
| `str.casefold() -> str` | تحويل السلسلة النصية إلى نسخة casefold للمقارنات غير الحساسة لحالة الأحرف. |
| `str.capitalize() -> str` | تحويل الحرف الأول من السلسلة النصية إلى حرف كبير. |
| `str.center(width[, fillchar]) -> str` | توسيط السلسلة النصية داخل عرض حقل محدد.<br>• `width`: العرض المطلوب.<br>• `fillchar`: حرف التعبئة (اختياري). |
| `str.translate(table) -> str` | استبدال الأحرف في السلسلة النصية باستخدام جدول ترجمة.<br>• `table`: جدول الترجمة. |
| `str.expandtabs(tabsize=8) -> str` | توسيع أحرف الجدولة في السلسلة النصية.<br>• `tabsize`: حجم التبويب (افتراضيًا 8). |
| `str.index(sub[, start[, end]]) -> int` | البحث عن موضع سلسلة نصية فرعية، وإثارة استثناء إذا لم يتم العثور عليها.<br>• `sub`: السلسلة النصية المراد البحث عنها.<br>• `start`: موضع بداية البحث (اختياري).<br>• `end`: موضع نهاية البحث (اختياري). |
| `str.rjust(width[, fillchar]) -> str` | محاذاة السلسلة النصية إلى اليمين.<br>• `width`: العرض المطلوب.<br>• `fillchar`: حرف التعبئة (اختياري). |
| `str.ljust(width[, fillchar]) -> str` | محاذاة السلسلة النصية إلى اليسار.<br>• `width`: العرض المطلوب.<br>• `fillchar`: حرف التعبئة (اختياري). |
| `str.swapcase() -> str` | تبديل حالة الأحرف في السلسلة النصية. |
| `str.title() -> str` | تحويل السلسلة النصية إلى حالة عنوان. |
| `str.zfill(width) -> str` | ملء السلسلة النصية بالأصفار على اليسار.<br>• `width`: العرض المطلوب. |
| `str.splitlines([keepends]) -> list` | تقسيم السلسلة النصية إلى قائمة من الأسطر.<br>• `keepends`: الاحتفاظ بنهايات الأسطر (اختياري). |
| `str.partition(sep) -> tuple` | تقسيم السلسلة النصية إلى ثلاثة أجزاء.<br>• `sep`: الفاصل. |

### أفعال نادرة الاستعمال

| الفعل | الوصف |
|---|---|
| `str.isalnum() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أحرف أبجدية رقمية. |
| `str.isalpha() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أحرف أبجدية. |
| `str.isdecimal() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أحرف عشرية. |
| `str.isdigit() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أرقام. |
| `str.isidentifier() -> bool` | التحقق مما إذا كانت السلسلة النصية معرف بايثون صالح. |
| `str.islower() -> bool` | التحقق مما إذا كانت جميع الأحرف المكونة في السلسلة النصية صغيرة. |
| `str.isnumeric() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أحرف رقمية. |
| `str.isprintable() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من أحرف قابلة للطباعة. |
| `str.isspace() -> bool` | التحقق مما إذا كانت السلسلة النصية تتكون فقط من مسافات بيضاء. |
| `str.istitle() -> bool` | التحقق مما إذا كانت السلسلة النصية في حالة عنوان. |
| `str.isupper() -> bool` | التحقق مما إذا كانت جميع الأحرف المكونة في السلسلة النصية كبيرة. |


## الملفات (`file`)

