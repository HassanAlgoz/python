# الاستيراد والتصدير

عندما يكبر النص البرمجي المكتوب ويتعقد، فإننا كثيرًا ما نلجأ لتقسيمه في ملفات منفصلة وذلك ليكون كل ملف مسؤولاً عن جزئية معيَّنة.

أو قد نرى أن جزءًا من النص البرمجي يستحق الاستعمال في مشروع آخر، فنريد أن نلفَّه في حزمة، ونصدِّره ليكون قابلاً للتثبيت في مشاريع أخرى.

هاتان الحالتان تستوجبان أن نتعرف على مصطلحين في بايثون: الوحدة والحزمة.

**الوِحدة** (Module) هي النص البرمجي في الملف الواحد (مثل: `script.py`)

**الحزمة** (Package) هي مجموعة مكوَّنة من وِحدة أو أكثر؛ وتُعرَّف: بمجلَّد يكون فيه ملف خاص باسم `__init.py__` ويوضع فيه النص البرمجي المنشئ الذي يعمل عند فعل استيراد الحزمة بالكلمة `import` (في المرة الأولى فقط).

فيما يلي مثال يوضِّح ترتيب حزمة ما (`my_package`) مكوَّنة من حزم مضمَّنة، وفي المستوى الأخير نرى الوحدات، على النحو التالي:

```         
│   main.py
│   main.py
│
└───my_package
    │   __init__.py
    │
    ├───pkg1
    │   │   __init__.py
    │   │   module_a.py
    │   │   module_b.py
    │
    ├───pkg2
    │   │   __init__.py
    │   │   module_a.py
    │   │   module_b.py
    │   │   module_c.py
```

- الملف `main.py` هو المكان الذي سنكتب فيه الكود لتجربة عبارات الاستيراد (`import`).
- نقول إن المجلدين `pkg1` و`pkg2` هما: حزم فرعية من حزمة `my_package`، ويمكن استيرادهما بشكل مستقل.
- الملفات `module_a.py` و`module_b.py` و`module_c.py` هي وحدات داخل الحزم الفرعية.
- يستخدم الملف `__init__.py` علامةً للمجلَّد أنه حزمة؛ ولا يلزم أن يتضمن أي كود، ولكنه غالبًا ما يحتوي على كود تهيئة للحزمة.

دعنا نلقي نظرة على عمليات الاستيراد واحدة تلو الأخرى، انظر (`main.py`):

``` python
import my_package
from my_package.pkg1 import module_a
from my_package.pkg2.module_a import func_a
from my_package.pkg2.module_b import *
```

أولاً، لاحظ أن فعل الاستيراد `import my_package` يحدد حزمة لا وحدة. وبالتالي، سينفذ الملف `__init__.py`، الذي يحتوي على عبارات تعيين (مثل `__version__`، و`DEFAULT_TIMEOUT`، وما إلى ذلك) سترتبط بمعرف `my_package`، ويمكن الوصول إليها باستخدام النقطة (`.`).

ثانيًا لاحظ العبارة: `from my_package.pkg1 import module_a` فهي تحدد وحدة (`module_a`)، وبالتالي، يتم تنفيذ جميع التعليمات البرمجية في `module_a.py` والتعيينات تُسنَد للمعرف `module_a` ويمكن الوصول إليها باستخدام النقطة (`.`).

ثالثًا استيراد مباشر للفعل `func_a` من وحدة `module_a` في الحزمة الفرعية `pkg2`.

أخيرًا الصيغة `from ... import *` تستورد جميع (`*`) الأسماء من الوحدة النمطية (باستثناء تلك التي تبدأ بـ `__`) إلى نطاق التسمية الحالي (في الوحدة التي نحن فيها). بشكل عام، لا ننصح باستعمال هذه الطريقة، حيث قد تؤدي إلى إلغاء أسماء سبق تعريفها لتحل مكانها هذه الأسماء الجديدة، ولكن لا بأس بها لتقليل جهد الكتابةخصوصًا في الجلسات التفاعلية.

## تثبيت حزم

لتثبيت حزمة من قاعدة بيانات الحزم [PyPI](https://pypi.org/) نستعمل أداة `uv` على النحو التالي:

``` bash
uv add pandas
```

وبعد تثبيت الحزمة ، نستوردها هكذا ونستعملها:

```{python}
import pandas as pd

df = pd.read_csv('../../datasets/students.csv')
df
```

