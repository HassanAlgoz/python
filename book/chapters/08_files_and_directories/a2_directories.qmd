# الدليل

أحيانًا نريد التعامل مع مجموعة ملفات، نقلاً أو نسخًا أو حذفًا أو ترتيبًا أو بحثًا. وهذا ما نبحثه في هذا الفصل.

وجب علينا أولاً أن نُدرك أن ثمة نوعان من الملفات في النظام:

1. **دليل**: وهو قائمة من الملفات والأدلة
	- وهو الذي تراه في الواجهة الرسومية على شكل **مجلَّد**
	- ولا يحتاج لتحديد صيغة
2. **ملف**: وهو الذي يحوي بيانات نصية أو ثنائية
	- وهي الملفات التي تراها داخل المجلد في الواجهة الرسومية
	- صيغتها هي الحروف بعد آخر نقطة؛ مثل: `my_data.csv` (الصيغة: `csv`)

والملف المبتدأُ بالنقطة مثل: `.git` يكون **مخفيًّا**.

و**الطريق** هو الموصل لملفٍّ ما أو دليلٍ ما نحو: `datasets/example_root/a/a.txt`. وسبق أن بينا أنه على نوعين: مُطلَق ونسبي.

فحديثنا في هذا الفصل عن الوصول إلى الملفات ، والبحث عنها ، وتركيب المسار إليها، وهذا ما تحققه مكتبة [`pathlib`](https://docs.python.org/3/library/pathlib.html).

::: {.callout-note}
يجدر بالذكر أن مكتبة `pathlib` جاءت متأخرة في إصدار `Python 3.4` لمعالجة الملفات بأسلوب البرمجة الشيئية (OOP)، بينما تستعمل مكتبة `os` التي سبقتها لأغراض متعددة فيما يخص نظام التشغيل (os = Operating System) من ضمنها خُصِّصَت `os.path` للتتعامل مع نظام الملفات إلا أنها كُتِبَت بأسلوب إجرائي تأسيًّا بلغة سي (C)، فهي منخفضة المستوى (تتعامل مباشرة مع `bytes` و `str`) بالمقارنة بالبرمجة الشيئية الأعلى في التجريد؛ **وهو ما نفضله**. انظر [مقارنة pathlib بوحدات `os` و `os.path`](https://docs.python.org/3/library/pathlib.html#comparison-to-the-os-and-os-path-modules).
:::

لاستعراض عمليات المكتبة، أنشأنا مُسبقًا شجرة تبدأ من مجلد اسمه `example_root` تجدها داخل `datasets` في [مستودع مشروع الكتاب](https://github.com/HassanAlgoz/python/tree/main/book/datasets/example_root) على النحو التالي:

```{mermaid}
graph LR
    A[example_root]
    A --> B[something.txt]
    A --> C[a]
    A --> D[b]
    A --> E[c]
    C --> F["a.txt"]
    C --> G["A_domestic_cat.jpg"]
    C --> I["zzz.txt"]
    D --> J["A_yellow_and_white_cat.jpg"]
    D --> L[b.txt]
    D --> M["DSC0532_(9120523417).jpg"]
    E --> O["c.txt"]
    E --> P[c_inner]
    P --> Q["inner.txt"]
```

الشيء الأساسي الذي نتعامل معه في هذه المكتبة هو **المسار** ([`Path`](https://docs.python.org/3/library/pathlib.html#concrete-paths)):

```{python}
from pathlib import Path
```

يُنشأ المسار من نص أو مجموعة نصوص بينها علامة `/` (وهي في الأصل علامة قسمة إذا وُضعت بين الأرقام) التي تعني ضم النص إلى المسار.

لاحظ استعمال النص الخام `r''` لكون الحرف `\` له معنىً خاص في نصوص بايثون، فهو يستعمل مثلا `\n` للانتقال لسطر جديد. لكن حين نستعمل `r''` فإن الحرف `\` لا يعني شيئًا خاصًا.


```{python}
assert (
    Path('../../datasets/example_root/a/a.txt') ==
    Path(r'..\..\datasets\example_root\a\a.txt') ==
    Path('../../datasets') / 'example_root' / 'a' / 'a.txt'
)
```

ملاحظة، عند نسخ المسارات في نظام ويندوز (Windows)، يجب عليك إما استبدال الشرطات المائلة العكسية `\` بالشرطات المائلة الأمامية `/` أو استخدام السلاسل النصية الخام `r''` لتجنب المشاكل (كما فعلنا أعلاه).

وهكذا نستطيع استعمال الكائن `Path` في إجراء `open(file=path)` للتعامل مع الملفات:

```{python}
p = Path('../../datasets/example_root/a/a.txt')

f = open(file=p, mode='r')
content = f.read()
f.close()

print(content)
```


ولأن الملف يعتبر [**مدير سياق** (Context Manager)](https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers) فيستحسن الإتيان بجملة السياق `with` إذ تتكفل بإغلاق الملف تلقائيّا عند نهايتها. وذلك على النحو التالي:

```{python}
p = Path('../../datasets/example_root/a/a.txt')

contents = ''
with open(file=p, mode='r') as f:
    contents = f.read()
print(contents)
```

بدلاً من قراءة الملف جملة واحدة `.read()` نستطيع القراءة سطرًا بسطر عن طريق الإجراء `.readline()` على النحو التالي:

```{python}
p = Path('../../datasets/example_root/a/a.txt')

with open(file=p, mode='r') as f:
    for i, line in enumerate(f, start=1):
        line = line.rstrip()
        print(f'Line {i}: {line}')
```

تستعمل `.rstrip()` لإزالة حرف انتقال السطر `\n` .

### الدليل

انظر [قراءة الأدلة](https://docs.python.org/3/library/pathlib.html#reading-directories).

لعرض قائمة الدليل، نستعمل المكرر الناتج من إجراء `.iterdir()` ونكرر عليه، وهو بدورِه يُنتج في كل كرةٍ **مساراً** (`x`). وهذا المسار يُمكن التحقق من أنه يشير إلى دليل أو لا (`x.is_dir()`) على النحو التالي: 

```{python}
p = Path('../../datasets/example_root/')
dirs = [x for x in p.iterdir() if x.is_dir()]
dirs
```

#### جرب

هل تريد أن تعرف حجم دليل التنزيلات (Downloads) في جهازك؟. لديك الإجراء `stat()` للحصول على بيانات عن الدليل، والتي من ضمنها الحجم (`st_size`) هكذا:

```{python}
p = Path.home() / 'Downloads'
size = p.stat().st_size
print(size, 'bytes')
```

ثم هذا الإجراء لتحويل الوِحدة من البايت إلى الكيلو والميجا والقيقا:

```{python}
def format_size(size):
    size_kb = size / 1024
    size_mb = size_kb / 1024
    size_gb = size_mb / 1024
    if size_gb > 0.1:
        return f'{size_gb:.2f} GB'
    elif size_mb > 0.1:
        return f'{size_mb:.2f} MB'
    return f'{size_kb:.2f} KB'

print(format_size(size))
```

### البحث في شجرة الأدلة

يستعمل الإجراء [`glob`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob) للبحث عن نمط معيَّن بدءًا من **المسار**، وهذا النمط قد يبحث في مستوىً واحد أو يتخلل الشجرة بأي طريقة تريد؛ ليطابق أسماء الملفات والأدلة بنمط معيَّن فيستخرجها لك.

انظر [لغة الأنماط](https://docs.python.org/3/library/pathlib.html#pathlib-pattern-language) لتتعلم هذه اللغة الصغيرة.

في هذا المثال نبحث عن ملفات الصُّوَر التي بصيغة `.jpg` لنحسب حجم مجموع ملفات الصور لدينا داخل المسار `datasets/pathlib` وما يتفرع عن هذه الشجرة نزولاً إلى الأبد (وذلك بنمط: `**/*.jpg`):


```{python}
total_size = 0
for p in Path('../../datasets/example_root/').glob('**/*.jpg'):
    total_size += p.stat().st_size

print('Total size:', total_size, 'bytes')
print('Total size:', format_size(total_size))
```

### المشي على جميع ملفات الشجرة

نستعمل الإجراء [`walk`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.walk) للسير على جميع ملفات الشجرة نزولاً أو صعودًا؛ على هذا النحو:

```{python}
p = Path('../../datasets/example_root/')
for dirpath, dirnames, filenames in p.walk(top_down=True):
    print(dirpath)
    for file in filenames:
        print(f'\t{file}')
        # print('\tFULL PATH:', Path(dirpath) / file)
```

لاحظ أن `.walk()` تعطينا ثلاثة قيَم في كل كرة:

- `dirpath`: المسار الحالي للمجلد.
- `dirnames`: قائمة بأسماء المجلدات في المجلد الحالي.
- `filenames`: قائمة بأسماء الملفات في المجلد الحالي.

لإظهار كامل المسار؛ أزل علامة التعليق `#` من السطر الأخير لتنفيذه.

## تصنيف عمليات `pathlib` في بايثون

وإليك تصنيف لعمليات مكتبة `pathlib`:

### عمليات المسار

- **إنشاء وتعديل المسارات:**
    - [`.joinpath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.joinpath): دمج مكونات مسار.
    - [`.parent`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parent): استخراج الدليل الأب.
    - [`.name`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.name): استخراج الاسم الأساسي للملف.
    - [`.stem`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.stem): استخراج اسم الملف بدون الامتداد.
    - [`.suffix`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.suffix): استخراج امتداد الملف.
    - [`.with_name`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name): إنشاء مسار جديد باسم مختلف.
    - [`.with_suffix`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_suffix): إنشاء مسار جديد بامتداد مختلف.
    - [`relative_to`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.relative_to): إنشاء مسار نسبي.

### عمليات على نظام الملفات

- **استعلام:**
    - [`is_absolute`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.is_absolute): هل هو مطلق؟.
    - [`samefile`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.samefile): هل مساران يشيران إلى نفس الملف؟.
    - [`exists`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists): هل هو مسار موجود؟.
    - [`is_file`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file): هل هو مسار ملف؟.
    - [`is_dir`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_dir): هل هو مسار دليل؟.
    - [`is_symlink`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_symlink): هل هو ارتباط رمزي؟.
    - [`stat`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.stat): سرد إحصائيات نظام الملفات.
    - [`lstat`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.lstat): سرد إحصائيات نظام الملفات دون متابعة الارتباطات الرمزية.
- **عمليات تغيير:**
    - [`open`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.open): فتح ملف للقراءة أو الكتابة أو الإضافة.
    - [`mkdir`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir): إنشاء دليل.
    - [`rmdir`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rmdir): حذف دليل فارغ.
    - [`unlink`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink): حذف ملف.
    - [`rename`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rename): تعديل اسم ملف.
    - [`replace`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.replace): تعديل اسم ملف مع الكتابة فوقه إذا لزم الأمر.
    - [`chmod`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.chmod): تغيير أذونات الملف.
    - [`lchmod`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.lchmod): تغيير أذونات الملف دون متابعة الارتباطات الرمزية.
    - [`touch`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.touch): تحديث الطابع الزمني للملف.

### الارتباطات الرمزية والصلبة

- [`symlink_to`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.symlink_to): إنشاء ارتباط رمزي.
- [`hardlink_to`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.hardlink_to): إنشاء ارتباط صلب.
- [`readlink`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.readlink): قراءة الهدف من ارتباط رمزي.

### التكرار والبحث

- [`iterdir`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir): تكرار على قائمة الدليل.
- [`glob`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob): البحث عن الملفات المطابقة لنمط.
- [`rglob`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rglob): البحث بشكل متكرر عن الملفات المطابقة لنمط.
- [`walk`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.walk): التنقل بشكل متكرر في شجرة الأدلة.

## النسخ والحذف والنقل (`shutil`)

- [`shutil.copy2`](https://docs.python.org/3/library/shutil.html#shutil.copy2): نسخ ملف.
- [`shutil.copytree`](https://docs.python.org/3/library/shutil.html#shutil.copytree): نسخ شجرة أدلة.
- [`shutil.rmtree`](https://docs.python.org/3/library/shutil.html#shutil.rmtree): حذف شجرة أدلة.
- [`shutil.move`](https://docs.python.org/3/library/shutil.html#shutil.move): نقل ملف أو دليل.