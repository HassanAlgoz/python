# تطبيقات {.unnumbered}

## فرز البيانات

تصور أن لدينا قائمة من الأرقام الموجبة والسالبة في مجموعة واحدة، ونريد فصلها لمجموعتين:

```{python}
numbers = [-11, -12, 13, 14, -15, 16, 17, -18, -19, 20]
positives = []
negatives = []

for x in numbers:
    if x > 0:
        positives.append(x)
    else:
        negatives.append(x)

print('positives:', positives)
print('negatives:', negatives)
```

أو باستعمال الإنشاء المختصر:

```{python}
numbers = [-11, -12, 13, 14, -15, 16, 17, -18, -19, 20]
positives = [x for x in numbers if x > 0]
negatives = [x for x in numbers if x < 0]

print('positives:', positives)
print('negatives:', negatives)
```

## الحساب بين البيانات المترابطة

افترض أن لديك قائمة بالمصروفات والإيرادات لكل رُبع من السنة، وتريد حساب صافي الربح لكل ربع على حدة، ثم جمعها لتحصل على الربح الإجمالي للسنة.

```{python}
monthly_income  = [52000, 51000, 48000]
monthly_expense = [46800, 45900, 43200]
monthly_net = []
for inc, exp in zip(monthly_income, monthly_expense):
    result = inc - exp
    monthly_net.append(result)

print("monthly net:", monthly_net)
print("annual net:", sum(monthly_net))
```

أو باستعمال الإنشاء المختصر:

```{python}
monthly_income  = [52000, 51000, 48000]
monthly_expense = [46800, 45900, 43200]
monthly_net = [inc - exp for inc, exp in zip(monthly_income, monthly_expense)]

print("monthly net:", monthly_net)
print("annual net:", sum(monthly_net))
```

## معرفة النقاط المجاورة

تقول الرياضيات أن المسافة الإقليدية (على سطح مستوي لا متعرج) بين نقطتين تحكمها المعادلة:

$$
d = \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}
$$

نريد استعماله لقائمة من النقاط لمعرفة النقاط المجاورة.

```{python}
points = [(1, 2), (3, 4), (5, 6), (7, 8)]
x1, y1 = (2, 4)

distances = []

for x2, y2 in points:
  d = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5
  distances.append(d)
  print(f'distance from {x2, y2} to {x1, y1} is {d}')

min_distance = min(distances)
min_distance_index = distances.index(min_distance)

print('min distance index:', min_distance_index)

nearest_point = points[min_distance_index]

print(f'nearest point to {x1, y1} is {nearest_point}')
```

## أمثلة إضافية على الإنشاء المختصر

يمكن استعمال اختصار من اختصار على النحو التالي. في هذا المثال نفرد قائمة مكونة من قوائم عددية، فنحوِّلها لتكون قائمة واحدة مكوَّنة من جميع هذه الأرقام:

```{python}
vec = [[1,2,3], [4,5,6], [7,8,9]]
[num for elem in vec for num in elem]
```

إذا كتبناها من غير اختصار فشكلها كالتالي (لاحظ استعملنا متغير `flat` لتجميع القيَم المفردة):

```{python}
flat = []
for elem in vec:
    for num in elem:
        flat.append(num)
flat
```

وهذا مثال لحاصل الضرب الديكارتي بين مجموعتين رياضيتين:

```{python}
colors = ['red', 'green']
shapes = ['circle', 'square']
cartesian_product = [(color, shape) for color in colors for shape in shapes]
cartesian_product
```

راجع التوثيق [لمزيد من الأمثلة](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions).
