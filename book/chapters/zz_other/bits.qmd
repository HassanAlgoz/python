# Bits and Bytes


## العمليات على مستوى البت

العمليات على مستوى البت (Bitwise operations) تكون منطقية فقط للأعداد الصحيحة (Integral).

| عشري (Decimal) | ست عشري (Hexadecimal) | ثنائي (Binary) |
|---|---|---|
| 0 | 0 | 00000000 |
| 1 | 1 | 00000001 |
| 2 | 2 | 00000010 |
| 3 | 3 | 00000011 |
| 4 | 4 | 00000100 |
| 5 | 5 | 00000101 |
| 6 | 6 | 00000110 |
| 7 | 7 | 00000111 |
| 8 | 8 | 00001000 |
| 9 | 9 | 00001001 |
| 10 | a | 00001010 |
| 11 | b | 00001011 |
| 12 | c | 00001100 |
| 13 | d | 00001101 |
| 14 | e | 00001110 |
| 15 | f | 00001111 |
| 16 | 10 | 00010000 |

يمكن عرض الأعداد الصحيحة بالتمثيل الثنائي أو الست عشري:

```{python}
x = 6
print(bin(x)) # ثنائي
print(hex(x)) # ست عشري

x = 16
print(bin(x)) # ثنائي
print(hex(x)) # ست عشري
```

يسرد هذا الجدول العمليات على مستوى البت مرتبة حسب الأولوية التصاعدية:

| العملية | النتيجة                          | 
|---------|----------------------------------|
| `~x`    | عكس جميع بتات x                  |
| `x << n`| إزاحة x إلى اليسار بمقدار n بتات |
| `x >> n`| إزاحة x إلى اليمين بمقدار n بتات |
| `x & y` | عملية AND على مستوى البت بين x و y |
| `x ^ y` | عملية XOR (exclusive or) على مستوى البت بين x و y |
| `x | y` | عملية OR على مستوى البت بين x و y |


## Binary Sequence Types

Python provides two built-in types for binary sequences: `bytes` and `bytearray`.

Discussion on binary sequences is beyond the scope of this book, but you can read more about them in the [Python documentation](https://docs.python.org/3/library/stdtypes.html#binaryseq).