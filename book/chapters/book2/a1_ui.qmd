# طبقة العَرض

ماذا بعد كتابة القطع البرمجيَّة من إجراءات وأنواع وصفات ومجردات؟ هل هي في شكلها هذا جاهزة لخدمة المستفيد؟ .. للجواب عن هذا السؤال نسأل ونقول: من هو المستفيد؟

قد يكون المستفيد هو مستخدم الانترنت عن طريق تطبيق المتصفِّح ، أو عن طريق التطبيق الخاص بالبرنامج.

![المبرمج (يمين) يكتب البرنامج ويقدمه للمستفيد العادي (يسار)](../../assets/users/dev_to_user.png)

يُستعمل مصطلح **واجهة المستخدم الرسومية** (Graphical User Interface) للدلالة على الشيء الظاهر بصريًّا للمستخدم والذي به يستفيد من البرنامج ويتعامل معه. وتدخل في صنعة هذه الواجهة عوامل، من أهمها نظام التشغيل:

- فواجهة الأجهزة المكتبية، أنظمة تشغيلها: Windows, Linux, MacOS
- وواجهة الأجهزة الكفية واللوحية، أنظمة تشغيلها: Android, iOS

فكل نظام له تفاصيله الخاصَّة لبناء الواجهة الرسومية عليه؛ والعقبة التي تحاول تسهيلها بعض البرمجيات المبنية اليوم هي: كتابة الكود مرة واحدة لتظهر نفس الواجهة على جميع الأنظمة (أو حتى أن تتكيف بحسب النظام). وهذا مجال لا يزال الاختراع فيه قائمًا.

## واجهة الأجهزة المكتبية

فمكتبة `tkinter` هي في بايثون لكتابة قطعة الواجهة مرة واحدة لتعمل على جميع أنواع أنظمة الأجهزة المكتبية. وقد وجدتُ في توثيق بايثون إشارة إلى كتاب [Tkinter الحديثة لمطوري بايثون المشغولين](https://tkdocs.com/book.html). والواقع أن استعمالها قليل.

## واجهة متصفحي الشبكة

وقال آخرون لماذا لا نستفيد من كون الجميع يستخدم تطبيق متصفِّح المواقع لتصفّح الشبكة العالمية (الإنترنت). إذْ تظهر للمستخدمين بشكل موحَّد (إلى حدٍّ ما) على اختلاف أنظمة أجهزتهم: فالنصوص والروابط والأزرار والقوائم والشرائط والصور ونحوها .. تم العمل عليها في المتصفحات منذ بداية الإنترنت. وبهذا خرجت **تطبيقات المتصفِّح** (Web Applications) إلى جانب **المواقع** (Websites) المعروفة؛ إذْ تشاركها في الأدوات البرمجية.

وكان الأصل أنك إذا أردت إنشاء موقع إلكتروني بحيث يمكن زيارة التطبيق بزيارة صفحته على الشبكة. فلغات البرمجة الأصلية في صناعة تلك الواجهة هي ثلاثة:  HTML و CSS وهما لغتان وصفيَّتان -وليستا أوامِرِيَّتيْن كبايثون- ولغةٌ ثالثة أوامريَّة هي جافاسكريبت (JavaScript). فيمكنك أن تبدأ بها هُنا على [منصة FreeCodeCamp](https://www.freecodecamp.org/learn/) التعليمية غير الربحية. ثم تبني بإحدى المكتبات البرمجية الخاصة التي تجمع هذه اللغات الثلاثة. ومن أشهرها: [React](https://react.dev/) و [Vue](https://vuejs.org/).

وقد ظهرت بدائل تُعنى بتجريد بإخفاء تفاصيل تلك اللغات الثلاث خلف واجهة برمجيَّة أبسط من خلال بايثون؛ وذلك مثل [Streamlit](https://streamlit.io/) و [Gradio](https://www.gradio.app/) وكذلك مؤخرًا [FastHTML](https://fastht.ml/).

## واجهة تطبيقات الجوال

قد تكتفي بصناعة واجهة شبكية (Web App) حيث يمكن الوصول إليها بمتصفح الشبكة، فلا تحتاج لصناعة واجهة خاصَّة بنظام جوال معيَّن. إلا أنك قد تفقد بعض الخصائص الضرورية التي تحتاجها لتطبيقك (مثل إرسال الإشعارات)؛ وذلك لأن الشركات المهيمنة على نظم تشغيل الجوال وشبكاته ومتاجره لا تتيح خدماتها بالمجان. وهذا يضطرُّنا لتخصيص قطعة برمجيَّة لأنظمة الجوال. وفيه مسلكان ..

المسلك الأول: أن تكتب قطعتين:

- الأولى [قطعة خاصَّة بأنظمة آندرويد](https://developer.android.com/codelabs/basic-android-kotlin-compose-first-app)
- الثانية: [قطعة خاصَّة بأنظمة iOS](https://developer.apple.com/ios/planning/)

والمسلك الثاني: أن تكتب قطعة واحدة باستعمال [حزمة برمجيات فلتر (Flutter)](https://flutter.dev/) المطورة من قِبَل شركة غوغل (Google) التي تستعمل لغة دارت (Dart). وهدفها إنشاء واجهات التطبيقات على مختلف أنظمة التشغيل: الجوَّالة الكفيَّة أو اللوحيَّة أو المكتبيَّة.

(وفي كل الأحوال فإن المستفيد دائمًا هم أصحاب البنية التحتية التقنية).

## واجهة نافذة الأوامر

وتسمى **واجهة نافذة الأوامر** (Command-line Interface) فهي صالحة للمبرمج أو التقني الذي ألِف استعمال الشاشة السوداء؛ لأنها تظهر عليها.

ومن ميزاتها أنها لا تتطلَّب جهدًا كبيرًا في صناعتها مقارنة بالواجهة الرسومية لذا فإن كثيرًا من البرمجيات المفيدة تبدأ بهذا الشكل. وبعضها لا يفيد المستخدم العادي لأنها أدواة مخصوصة في البرمجة أو البرمجيات فتبقى هكذا. 

![المبرمج (يمين) يكتب البرنامج ويقدمه للمستفيد التقني (يسار)](../../assets/users/dev_to_techie.png)

وفيها مسلكان:

- الأول: **واجهة نصيَّة تأخذ وتعطي بالكتابة**: فلها مكتبة [argparse](https://docs.python.org/3/library/argparse.html) وهي أشهر لسهولتها. وقد [أفردنا لها فصلاً](./a2_argparse.qmd). ومن مكتباتها كذلك [click](https://click.palletsprojects.com/en/stable/quickstart/) و [typer](https://typer.tiangolo.com/).
- الثاني: **واجهة رسوميَّة على نافذة الأوامر النصيَّة** (Terminal User Interface - TUI) وهي أجمل. ومن أشهر مكتباتها [Textualize](https://www.textualize.io/).
