# الخدمات البرمجية

نتصوَّر **الشبكة العالميَّة** (الإنْتَرنِت) بأنها مجموعة أجهزة مترابطة بأشكال ارتباطات مختلفة. وكما هي السنة بين الأفراد والمؤسسات أن يخدم بعضهم بعضًا، ويتبادلون المنافع؛ فكذلك صار في العصر الرقمي تخادم عن طريق الحواسيب عبر الشبكة.

وكما أن المعادن موزعة مكامنها في طيات أطراف الأرض؛ فإن البيانات (المواد الخام) والمعلومات (المعالجة) وآليات المعالجة (الأجهزة والخوارزميات) كذلك؛ يتفاضل الناس فيما بينهم فيها. فيكون بينهم تبادل المنافع.

![شبكة محليَّة مرتبطة بموجِّه يربطها بشبكة أكبر (الشبكة العالمية) - الصورة من [CloudFlare](https://www.cloudflare.com/learning/network-layer/what-is-a-wan/)](../../assets/WAN%20Network.png)

فالصورة هذه توضِّح أن **الشبكة المحليَّة** ([Local Area Network - LAN](https://en.wikipedia.org/wiki/Local_area_network)) -الذي يكون جهاز أحدنا فردًا من أفرادها- مرتبطةٌ بموجِّه (Router) يكون بمثابة البوابة إلى الشبكات الأخرى. فأي اتصال يكون بيننا وبين العالم يمرُّ عبره.

وأما **شبكة الشبكات** فتسمى ([Wide Area Network - WAN](https://en.wikipedia.org/wiki/Wide_area_network))؛ وهكذا ببساطة نتصوَّر الشبكة العالمية؛ الإنرتنت.

## الخادم والعميل

وعندما ننظر إلى أفراد التبادلات المعلوماتية بين الحواسيب، فإن أحد الطرفين يكون له دوْر العميل والآخر يكون له دوْر الخادم؛ ثم قد ينعكس الدوْر:

- فأما **الخادم** (Server) فيسمى كذلك المزوِّد (Provider) باعتبار المنتَج أو الخدمة البرمجية.
- وأما **العميل** (Client) فيسمى كذلك المستخدم (User) أو المستهلك (Consumer).

![خادم لعدة عملاء](https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Client-server-model.svg/1200px-Client-server-model.svg.png)

## مكتبة العميل

تسهل بعض المكتبات الوصول إلى خوادم مخصوصة؛ وتسمى المكتبة حينئذٍ **عدة تطوير البرمجية** (SDK - Software Development Kit)، أو: **مكتبة العميل** ([Client Library](https://cloud.google.com/apis/docs/client-libraries-explained)).

فأحد طرق التعامل مع الخدمات البرمجية، أن توفِّر هذه الخدمة مكتبةً للاتصال بها، تبدوا كأنها أفعال مُعرَّفة عاديَّة، لكنَّ تفاصيلها تتضمَّن إرسال طلب للخادم المزوِّد ثم الرجوع بجوابه كقيمة لموضع الاستدعاء.

## مكتبة جيوباي مثالاً

ونمثل على ذلك بمكتبة [`GeoPy`](https://geopy.readthedocs.io/en/stable/) حيث كُتِب في الوصف:

> جيوباي هو عميل بايثوني لمجموعة من خدمات شائعة على الشبكة للترميز الجغرافي. فهو يسهل تحديد إحداثيات العناوين والمدن والبلدان والمعالم في جميع أنحاء العالم باستخدام برامج ترميز جغرافي خارجية ومصادر بيانات أخرى.

أولاً [تثبيت المكتبة](https://geopy.readthedocs.io/en/stable/#installation) باستعمال `uv`:

```bash
uv add geopy
```

وهذا العميل يمكن ضبطه للاختيار من مجموعة خوادم. وسنختار العميل `Nominatim` الذي يتصل بمزوِّد خدمة خارجية، وهو مزوِّد خدمة جغرافية عالمية تسمى `OpenStreetMap`.

```{python}
from geopy.geocoders import Nominatim
```

يطلب منَّا الفعل المنشئ التصريح بهويَّة للتطبيق؛ وذلك بتعيين `user_agent`، وهذا بحسب ما ورد في توثيق المكتبة. فنكتب أي اسم يدلُّ على التطبيق الذي نعمل عليه الآن، وسنختار الاسم `pythonia` .. ولك أن تختار أي اسم آخر.

```{python}
geolocator = Nominatim(user_agent="pythonia")
```

نفترض أننا نريد معرفة إحداثيات مدينة الدمام، وهذا هو عمل الفعل `geocode`:

```{python}
dammam_location = geolocator.geocode("Dammam, Saudi Arabia")
```

قد يبدوا الفعل عاديًّا، لكنه في الواقع يتصل بالخادم المزوِّد ويسأله عن إحداثيات المدينة.

```{mermaid}
sequenceDiagram
    UserCode -->> GeoPy: .geocode("...")
    GeoPy -->> OpenStreetMap: Request
    OpenStreetMap -->> GeoPy: Response
    GeoPy -->> UserCode: Return
```

جرب اطبع النتيجة لتعرف ما هو هذا الشيء الذي تتعامل معه. وكذلك اطبع نوعه:

```{python}
print(dammam_location)
print(type(dammam_location))
```

تبيَّن لنا أن النوع هو: `geopy.location.Location` وبالبحث في توثيق المكتبة، وجدنا تفاصيلها هنا: [geopy.location.Location](https://geopy.readthedocs.io/en/stable/index.html#geopy.location.Location). حيث كُتب:

<div class="ltr">
> Contains a parsed geocoder response. Can be iterated over as (`location<String>`, (`latitude<float>`, `longitude<float>`)). Or one can access the properties address, latitude, longitude, or raw. The last is a dictionary of the geocoder’s response for this item.
</div>

وبهذا نعرف أنها تتكون من ثلاثة معلومات، ويمكن الوصول لها بطرق مختلفة.

الطريقة الأولى معقدة ولذلك سنتركها.

الطريقة الثانية (عن طريق الصفات):

```{python}
print(dammam_location.address)
print(dammam_location.latitude)
print(dammam_location.longitude)
```

الطريقة الثالثة (عن طريق القاموس):

```{python}
print(dammam_location.raw)
print(type(dammam_location.raw)) # قاموس
```

وكذلك لمدينة أخرى مثل البحرين:

```{python}
bahrain_location = geolocator.geocode("Bahrain")
```

ثم بعد أن حصلنا على المعلومات، نستخرج الإحداثيات من المتغيرات التي حصلنا عليها:

```{python}
dammam_coords = (dammam_location.latitude, dammam_location.longitude)
bahrain_coords = (bahrain_location.latitude, bahrain_location.longitude)
```

ثم نحسب المسافة بين المدينتين، باستعمال فعل موجود في وحدة [`geopy.distance`](https://geopy.readthedocs.io/en/stable/#module-geopy.distance)، وهو `geodesic`. وأنبه مرة أخرى أن معرفة مثل ذلك يكون بتصفح فهرس المكتبة.

```{python}
from geopy.distance import geodesic

distance = geodesic(dammam_coords, bahrain_coords)
print(f"Between Dammam and Bahrain is {distance.kilometers:.2f} km")
```

وهكذا نكون قد حسبنا المسافة بين المدينتين بالكيلومترات، باستعمال مكتبة أعطتنا الإحداثيات للمدينتين، وكذلك أعطتنا معالجة المسافة بينهما.

## مفتاح الواجهة البرمجية (`API_KEY`)

قلنا أن مكتبة العميل هذه تمكِّنك من الوصول إلى عدة خدمات جيومكانية. ويجدر بالذكر أننها تتفاضل في دقة الحساب، وسرعة الجواب، وكمية الطلبات المسموحة إليها.

لذلك قد تضطر لتسجيل حساب وتشحنه بالمال برصيد، ثم تستعمل الخدمة عن طريق هذا الحساب. والطريقة التي يعرف بها الخادم أن البرنامج مخوَّل باستعمال رصيد هذا الحساب هي عبر **مفتاح الواجهة البرمجية** ([API Key](https://en.wikipedia.org/wiki/API_key)).

![مكتبة جيوباي وخدمات الترميز الجغرافي](https://geopy.readthedocs.io/en/stable/_images/geopy_and_geocoding_services.svg){width="100%"}

فإن أردت تغيير مزوِّد الخدمة (إما لعدم دقتها أو عدم توفر المعلومات أو أي سبب آخر)، فما عليك إلا استعمال استيراد `Geocoder` آخر. ونمثل لذلك بعميل يتصل بخدمة `TomTom`:

```python
from geopy.geocoders import TomTom

geolocator = TomTom(user_agent="pythonia", api_key="...")
```

لكن هذا يتطلَّب شيئًا إضافيًّا وهو الحصول على مفتاح متعلِّق بحساب مسجَّل على موقع [TomTom](https://developer.tomtom.com/) نفسه. ثم وضع هذا الفتاح هنا. وبهذا المفتاح المرتبط بهذا الحِساب يتمُّ تعبئة الاشتراك والصرف من رصيده.

وهذه أحد مصادر دخل شركات المعلومات.