
## تنبيهات في تسمية المتغيرات

التنبيه الأول: لغة بايثون تعتبر الحرف الصغير والكبير مختلفين؛ وبالتالي فإن هذين متغيرين مختلفين:

```python
my_variable = 5
My_Variable = 10
print(my_variable)
```

التنبيه الثاني: تتوقع قواعد لغة بايثون أن يبتدئ اسم المُعرَّف بحرف، لا رقمٍ ولا علامة:

```{python}
#|error: true
2my_variable = 5
```

التنبيه الثالث: يمنع استعمال **الكلمات الأصلية** في اللغة مثل:

```{python}
#| error: true
class = 5
True = 1
break = True
```
وإليك قائمة بهذه الكلمات (التي سنتعلم كيفية استعمالها لاحقًا إن شاء الله):

```
False      await      else       import     pass
None       break      except     in         raise
True       class      finally    is         return
and        continue   for        lambda     try
as         def        from       nonlocal   while
assert     del        global     not        with
async      elif       if         or         yield
```

التنبيه الخامس: يحبذ تسمية المتغيرات بما يدل على وظيفتها. مثلاً:

```{python}
rate = 50
hours_per_day = 6
days = 5
pay = rate * hours_per_day * days
print(pay)
```

هو أوضح بكثير من كتابتها هكذا (ولو كانت النتيجة نفسها):

```{python}
r = 50
hpd = 6
d = 5
p = r * hpd * d
print(p)
```
