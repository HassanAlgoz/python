---
og:title: index
---

# مقدمة {.unnumbered}

بسم الله الرحمن الرحيم. والحمد لله والصلاة والسلام على رسول الله وآله وصحبه ومن والاه. أما بعد.

## لماذا نبرمج؟

ظل الذكاء الاصطناعي طموحًا عاليًا منذ بزوغ فجر علوم الحاسب (1953). وما زال هذا الهدف دافعًا قويًّا لكل من فهم أننا باختراع الحاسب (1833 - 1871) استطعنا **محاكاة المنطق** في آلات صماء. ولا حد لإمكانيَّة هذا المعالِج الآلي إلا تعبيرك اللغوي أيها الناطق البشري. فهذا جانب **المعالجة**.

وجانب **الإدراك** فيه:

أدوات **الإحساس** التي تُدخِلُ المرئيات والمسموعات ونحوها ؛ وقد تم محاكاتها بآلة التصوير (كاميرا) ولاقط الصوت (مايكروفون). وكذلك أجهزة استشعار دقيقة مثل مستشعر الحرارة أو الرطوبة أو أجهزة قياس المسافة أو ماسحات البصمة أو الرنين المغناطيسي (MRI) أو الموجات الكهرومغناطيسية في الأقمار الصناعية وأجهزة الملاحة الجوية والبحرية والبوصلة أو ميزان التسوية الأفقية (Gyroscope) وغيرها كثير.

ومنها ما **يُسجل يدويًّا** كما يكون في المستشفى: العمر والوزن والطول، أو بيانات الحضور والانصراف أو المبيعات اليومية، أو بيانات طلاب أو متدربين في دورة تدريبية أو سجلات المخزون ونحو ذلك. وهي كثيرة جدًّا.

ثم أدوات **الاستيعاب** وهي التي تجمع المحسوسات في وعاءٍ واحدٍ للاعتبار جُملةً واحدة، وقد تم محاكاتهُا بما نسميه **الذاكرة** (وهي على مراحل تَبعُد وتَقترب من مركز المعالجة). وتشبه الذاكرة في الجهاز ما يراه الشخص في الوقت الواحد أو يمكن تصوُّرُه في الذهن وتخيله في لحظة واحدة. أما الذكريات المخزنة لدينا ، وما نكتبه في مذكرات فيكون مسجلاً في أجهزة **التخزين**.

ثم تأتي أدوات **المعالجة** وهي الآلات القابلة للبرمجة؛ مثل وحدة المعالجة المركزية (CPU) ووحدة المعالجة الرسومية (GPU) وغيرها؛ حيث يوضَع المنطق المترجَم من لغات البرمجة ويشغِّل هذه الإلكترونيات المجهرية لتحقيق مقصوده منها.


## لمن هذا الكتاب؟

وُلِد الكتاب أثناء تدريسي لمادة البايثون لخريجي التخصصات التقنية تمهيدًا للدخول في علوم البيانات والذكاء الاصطناعي. فأردت أن أضع مادة جامعة لأهم مفاهيم البرمجة بلغة بايثون. فهي مادة شاملة للفصول المؤسسة التي يحتاجها المبرمج في مشواره ذلك.

ثم راجعته فراعيتُ أصحاب التخصصات والميول الأخرى؛ فلم أجعل فيه ما يختصُّ بفهمه أصحابُ التخصص. وحاولت أن يرى المتعلم اتصال النظرية بالتطبيق بأسلوب مباشر ليس فيه تطويل الكلام. فهو مناسب للمبتدئ، وكذلك لمن أراد سد فجوات وجدها بعد ممارسة؛ ليعود بأساس قوي متين -بحول الله-.

وهو كذلك معينٌ لمن أراد تدريس البرمجة منطلقًا من لغة بايثون؛ فقد جمعتُ فيه ما تفرَّق ونظمتُه بعد نظرٍ في عدة مؤلفات مماثلة، وعلى ما رأيتُ أنه أنفع للمتعلم بأخصر طريق. ولستُ استغني عن إسهاماتكم. فبرمجية الكتاب مفتوحة ومتاحة على منصة GitHub للمساهمة بالإشكالات، خصوصًا فيما يتعلق بالتطبيقات والمسائل. ومرحبًا بمن أراد البناء.

## أهداف الكتاب

1. تمكين المتدرب من مهارة قراءة وكتابة قطع بايثون وتشغيلها والاستفادة من نتائجها.
2. تمكين المتدرب من البنى الأساسية في لغة بايثون وهي: الأعداد، الشرط والتكرار، الإجراءات، الجموع (المرتبة والمرقمة)، النص، الوقت والتاريخ، صياغة البيانات وحفظها واسترجاعها، والتعامل مع الأخطاء. 
3. تمكين المتدرب من قراءة توثيق البرمجيات الأخرى والاستفادة منها بكتابة برمجية تكامل بلغة بايثون؛ سواء كانت مكتبات أو خدمات برمجية عبر الشبكة العالمة.

بتحقق الهدف الثالث، تفتح لك أبواب البرمجة -بإذن الله-. انظر [مكتبة البرمجيات](./chapters/15_using/a1_use_library.qmd).


## لماذا وقع الاختيار على لغة بايثون؟

يقع الاختيار على لغة بايثون كثيرًا لأمور:

- **السهولة**: ففي البداية يحس المتعلم أنه يتعلم لغة إنجليزية بقواعد معيَّنة
- **العموم**: فهي ليست مختصة مثلاً ببرمجيات المواقع فقط؛ بل مجالات تطبيقاتها متنوعة
- **القبول** فالجهود متظافرة على خدمة مكتباتها من المجتمعات التي تتمحور حول نوع ما من التطبيقات. وهذا يسهِّل على الجميع البناء على الجهود المتراكمة.

### مجالات لغة بايثون

إذا نظرنا في إحصاء [JetBrains 2023](https://www.jetbrains.com/lp/devecosystem-2023/python/#python_for) نجد مجالات استعمال لغة بايثون:

![بم تستعمل لغة بايثون؟](./assets/jetbrains%20devecosystem-2023%20Python.png){target="_blank"} 

- 47% [تحليل البيانات](https://www.coursera.org/professional-certificates/google-advanced-data-analytics){target="_blank"}
- 42% [تعلم الآلة](https://www.youtube.com/playlist?list=PLuRv1IekA3YXlJIZIV8KjVcOEwoDXMY2b){target="_blank"} (الذكاء الاصطناعي)
- 39% [تطوير المواقع](https://www.coursera.org/professional-certificates/meta-back-end-developer){target="_blank"}
- 31% [برمجة كاسحات المواقع](https://www.youtube.com/playlist?list=PLzMcBGfZo4-n40rB1XaJ0ak1bemvlqumQ){target="_blank"} (التي تجمع البيانات)
- 30% [أتمتة إدارة الأنظمة والبنية التحتية التقنية](https://www.coursera.org/professional-certificates/google-it-automation){target="_blank"}
- 26% [أتمتة اختبار البرمجيات](https://playwright.dev/python/docs/intro){target="_blank"}
- 23% أغراض تعليمية
- 22% صناعة برمجيات أوليَّة (أي لسهولتها)

وانظر [إحصاء JetBrains 2024](https://www.jetbrains.com/lp/devecosystem-2024/#functionality_by_lang){target="_blank"} لمقارنة بايثون مع غيرها من اللغات، حيث يظهر في الجدول التالي توزيع استعمال المبرمجين للغات في مختلف المجالات. ويظهر لنا أن بايثون هي أكثر اللغات انتشارًا بين المجالات التقنية؛ فتعلمها يعطيك أوسع فرصة في المجالات:

![[توزيع استعمال اللغات بحسب المجالات التقنية في 2024](./assets/devecossytem-2024%20Code%20functionality%20by%20programming%20language.png)](./assets/devecossytem-2024%20Code%20functionality%20by%20programming%20language.png){target="_blank"}

وإليك بعض الشركات التقنية التي قامت على بايثون: Instagram، Spotify, Reddit, Netflix, Dropbox, Quora, Pintrest.

### بايثون وحدها لا تكفي

الواقع أن ليسَ ثمة لغة واحدة تحقق كل متطلبات بناء التطبيق؛ بل يغلب على المشاريع البرمجية تعدد اللغات فيها، وإن كانت مشاريع فردية صغيرة.
**وليست بايثون مقصودة لذاتها**. فإن من منافع التعلم بطريقة تأصيلية صحيحة؛ أن تعلُّمَك للغة الثانية يصبح أسهل؛ وقد تختلف أساليب التعبير بين لغة وأخرى، إلا أن المفاهيم متشابهة.

## منهجية الكتاب

تم تقسيم الكتاب ليكون في الباب أربعة جوانب:

1. **مفاهيم** حيث التعريفات والأقسام والقواعد (وليست فيه أمثلة وتطبيق).
2. **تطبيقات**: نرى فيه كيف نضع ما تعلمنا في سياقات مختلفة
3. **مسائل**: يأتي دورك لممارسة ما تعلمت
4. **حل المسائل**: لترى طريقة أخرى لحل التمرين

## موضوعات الكتاب

نبدأ بمقدمتين:

المقدمة الأولى عن [**لغة البرمجة**](./chapters/01_intro/a1_intro.qmd): مفرداتها وجملها وقواعدها ونموها بالمكتبات الأساسية والخارجية.

المقدمة الثانية عن [**معمارية فون نويمان**](./chapters/01_intro/a2_intro.qmd): الإحساس والاستيعاب والمعالجة والتخزين.

وبهتين المقدمتين يتكون لدينا تصوُّر عن ماهية لغة البرمجة وأجزاء الحاسب الأساسية التي تعمل فيها اللغة.

باب [**الأعداد**](./chapters/02_numbers/a_numbers):  ندخل في كيفية التعبير عن الحِساب البسيط كعملية الجمع. ففيه الحساب والمقارنة، وترتيب العمليات، والتعيين النسبي، ووحدة الرياضيات، ومجموعة الأعداد، وأنواع الأعداد (الصحيح والمنطقي والعشري)، والفرق بين النوع العددي والنصي، وكتابة القيم العددية.

باب [**الشرط والتكرار**](./chapters/03_control_flow/a_control_flow.qmd): فنتعلم كيفية تعليق تنفيذ جملة على شرط، وكذلك كيف نختار أن نكرر مجموعة من العمليات عددًا من المرات (أيًّا كانت هذه العلميات). ففيه الجملة الشرطية والتعبيرات المنطقية وتركيب الشروط وتضمين الجمل الشرطية، وجمل التكرار وما يتعلق بها من جمل التحكم في التكرار.

باب [**استدعاء الإجراءات**](./chapters/04_functions/a1_function_calling.qmd): ففيه نتعرف على كيفيات استدعاء الإجراء.

ثم [**الجمع المرتب**](./chapters/05_sequences/a_sequences.qmd): إذ ننتقل من التعامل مع أفراد البيانات إلى مجموعات البيانات. ففيه المجموعة المرتبة والصف والقائمة، وعمليات الإشارة والتقطيع والتكرار، وعمليات التعديل والإضافة والحذف، والفرز والترتيب.

ثم [**الجمع المرقَّم**](./chapters/06_mapping/a1_set.qmd): إذ نتعامل مع المجموعات التي تكون عناصرها ذات رقم / رمز وليسَ لها موضِع في المجموعة. وفيه المجموعة الرياضية والقاموس، وعمليات الإضافة والحذف والتعديل، والبحث والتكرار، والتقاطع والاتحاد والفرق.

ثم [**النص**](./chapters/07_strings/a1_strings.qmd): وهو سلسلة الرموز (سواءُ كانت حروفًا أو بيانات أو أي سلسلة منسقة أو غير منسقة من البيانات). ففيه النص الطبيعي والمقولب، وإنشاء النص وقراءته، والإشارة والتقطيع، والعمليات الخاصة بالنصوص من استبدال وبحث وفصل ووصل، وتفسير الأرقام وإخراج النص وتنسيقه. وكذلك ترميز يونيكود وتشفير النصوص وتحويلها.

ثم [**التعامل مع الأخطاء**](./chapters/13_errors/a1_errors.qmd)؛ وفيه الخطأ النحوي والخطأ المنطقي والخطأ الواقعي؛ وكيفية التعامل مع الخطأ المتوقع (الاستثناء).

ثم [**البرمجة الإجرائية**](./chapters/08_procedural/a1_procedural.qmd): فنتعلم كيفية تعريف الإجراءات لنعطيها أسماءً من عندنا ونستدعيها أينما نريد. ففيه تعريف الإجراء وعوامله المؤثرة والمتأثرة، وطريقتان لتعيين العوامل: بالموضع وبالاسم، وتعريف إجراءات جديدة بتفاصيلها وتنفيذها، والعوامل الجائزة والواجبة، والتصريح بالنوع، ومفهوم نطاق التسمية، وثمرة الإجراء.

ثم [**صياغة البيانات**](./chapters/09_files_and_directories/a1_serialization.qmd) وانتقالها وتخزينها وقراءتها وكتابتها، وكذلك التعامل مع المجلدات والملفات.

ثم [**البرمجة الشيئية**](./chapters/12_oop/a1_objects.qmd) حيث يتسنى لنا تعريف أنواعٍ جديدة بصفات وأفعال؛ كالأنواع المبنيَّة في أصل اللغة: الأعداد والنصوص والقوائم والقواميس.

ثم [**الوقت والتاريخ**](./chapters/14_time/a1_time.qmd)؛ وفيه  طريقة التعامل مع الوقت الحاسوبي والمناطق الزمنية والحساب بين الأزمنة والتكرار الزمني.

ثم [**تكامل البرمجيات**](./chapters/15_using/a1_use_library.qmd)؛ حيث نتعلم كيفية الاستفادة من البرمجيات التي كتبها الآخرون، سواءٌ كانت مكتبة أو خدمة متصلة بالشبكة العالمية.

## ترجمة المصطلحات

ما رأيك بهذه القطعة؟

> يستيقظ فينظر في موبايله أولاً، ثم يطفي الكونديشنر ليركب في الكار الإلكيتريك التي تستمد الإنرجي من شغل الماجنيت، متجهًا إلى عمله بينما يستمع للراديو حيث يدور الحديث حول ترانسبلانت الشعر.

وما رأيك بتعريب مصطلحات هكذا؟

> يستيقظ فينظر في جواله أولاً، ثم يطفئ المكيِّف ليركب في سيارته الكهربائية التي تستمد طاقتها من آلية عمل المغناطيس، متجهًا إلى عمله بينما يستمع للمذياع حيث يدور الحديث حول زراعة الشعر.

يكاد يتفق الجميع أن القطعة الثانية أوضح من الأولى. وهل هذه إلا مخترعات جديدة، ومصطلحات معرَّبة؟ فلماذا يُستغرَب تعريب المصطلحات التي تظهر في العلوم التي ظهرت بعد ذلك؟ والجواب فيما يظهر: هو **التداول**؛ فإذا استعمل الناس المصطلح للتعبير عن مقصودهم بكثرة؛ شاع وتقبلته الأسماع وجرى على الألسن. وإذا مقتوه أو تصلَّبت ألسنتهم عند محاولة النطق به واستبدلوه باللفظ الأعجمي أماتوه؛ وإن كان مكتوبًا في قواميس الدنيا والمعاجم كلها.

والمصطلحات العلمية لا تنشأ من غير سياق. فلسيت هي حاصل تعريف الكلمة من حيث هي. بل لا بد من النظر في السياق المكتوب وغير المكتوب حتى يتوصَّل إلى المعنى ثم من بعد ذلك يُؤتى باللفظ المناسب من معاجم اللغة؛ وذلك التناسُب يجب فيه مراعاة المصطلحات المصاحبة كذلك .. فالتعريب السليم فنّ نابعٌ من حب اللغة.

ولو نظرت في اللغة نفسها لرأيت في المصطلح الواحد اختلافًا كثيرًا، وهذا أمر طبعي لاختلاف الأنظار والأذواق والألسن. على سبيل المثال:
  
- مصطلح القيمة التي تدل على العدم: Null, Nil, None
- وكذلك المرادفات: import, include, use, require, using, load, link
- ومصطلح الإجراء (Procedure) من مرادفاته المستعملة في لغات دون لغات: Routine, Subroutine, Subprogram, Function, Method.

وأعظم من ذلك؛ عدد لغات البرمجة (250+) التي تعبر كل واحدة منها بأسلوبها الخاص؛ وكلها حروف إنجليزية. والمختصصون يُدركون حجم الاختلاف الكبير في المصطلحات الإنجليزية المستعملة مما يوهم من لم يخبرها أنها مختلفة في المعنى.

فلماذا تضيق أفهامنا عن استيعاب الاختلاف حين يكون عربيًّا؟ بل يجب أن تتسع صدورنا للاختلاف إذْ لا مشاحة في الإصطلاح؛ وباب الاجتهاد فيه واسعٌ لا يجب التضييق فيه طالما كان المسلك لغويًّا صحيحًا.

ولعل وصف المفاهيم باللغة الأم أقرب للطبع، وأمكن في الذهن وأوعى، وأسهل في التقليب والانتقاد، وأوسع في الاختراع والإبداع. فالمفاهيم لا تتعلق باللغة التي كتبت بحروفها. فالمعنى شيء، واللغة شيء ثاني. بل إن علامة تمكن المرء من العلم حُسن العبارة عنه. فليس بينه وبين المفهوم حاجز اللغة، ولا هالة المصطلح.

ولا يفهم مما سبق أن المصطلح الإنجليزي مُهمَل؛ فقد اجتهدت في البيان العربي مع ذكر المصطلح الإنجليزي أينما حلّ؛ فذلك يُكسبك الأمرين معًا. ولا بد للمتعلم من إتقان اللغة الإنجليزية ليستقل ويتبحر: فإنها مفتاحُ كثير من المواد المكتوبة والمسموعة والمرئية اليوم.