# مقدمة {.unnumbered}

بسم الله الرحمن الرحيم. والحمد لله والصلاة والسلام على رسول الله وآله وصحبه ومن والاه. أما بعد.

## لماذا نبرمج؟

ظل الذكاء الاصطناعي طموحًا عاليًا منذ بزوغ فجر علوم الحاسب (1953). وما زال هذا الهدف دافعًا قويًّا لكل من فهم أننا باختراع الحاسب (1833 - 1871) استطعنا **محاكاة المنطق** في آلات صماء. ولا حد لإمكانيَّة هذا المعالِج الآلي إلا تعبيرك اللغوي أيها الناطق البشري. فهذا جانب **المعالجة**.

وجانب **الإدراك** فيه:

أدوات **الإحساس** التي تُدخِلُ المرئيات والمسموعات ونحوها ؛ وقد تم محاكاتها بآلة التصوير (كاميرا) ولاقط الصوت (مايكروفون). وكذلك أجهزة استشعار دقيقة مثل مستشعر الحرارة أو الرطوبة أو أجهزة قياس المسافة أو ماسحات البصمة أو الرنين المغناطيسي (MRI) أو الموجات الكهرومغناطيسية في الأقمار الصناعية وأجهزة الملاحة الجوية والبحرية والبوصلة أو ميزان التسوية الأفقية (Gyroscope) وغيرها كثير.

ومنها ما **يُسجل يدويًّا** كما يكون في المستشفى: العمر والوزن والطول، أو بيانات الحضور والانصراف أو المبيعات اليومية، أو بيانات طلاب أو متدربين في دورة تدريبية أو سجلات المخزون ونحو ذلك. وهي كثيرة جدًّا.

ثم أدوات **الاستيعاب** وهي التي تجمع المحسوسات في وعاءٍ واحدٍ للاعتبار جُملةً واحدة، وقد تم محاكاتهُا بما نسميه **الذاكرة** (وهي على مراحل تَبعُد وتَقترب من مركز المعالجة). وتشبه الذاكرة في الجهاز ما يراه الشخص في الوقت الواحد أو يمكن تصوُّرُه في الذهن وتخيله في لحظة واحدة. أما الذكريات المخزنة لدينا ، وما نكتبه في مذكرات فيكون مسجلاً في أجهزة **التخزين**.

ثم تأتي أدوات **المعالجة** وهي الآلات القابلة للبرمجة؛ مثل وحدة المعالجة المركزية (CPU) ووحدة المعالجة الرسومية (GPU) وغيرها؛ حيث يوضَع المنطق المترجَم من لغات البرمجة ويشغِّل هذه الإلكترونيات المجهرية لتحقيق مقصوده منها.


## لمن هذا الكتاب؟

وُلِد الكتاب أثناء تدريسي لمادة البايثون لخريجي التخصصات التقنية تمهيدًا للدخول في علوم البيانات والذكاء الاصطناعي. فأردت أن أضع مادة جامعة لأهم مفاهيم البرمجة بلغة بايثون. فهي مادة شاملة للفصول المؤسسة التي يحتاجها المبرمج في مشواره ذلك.

ثم راجعته فراعيتُ أصحاب التخصصات والميول الأخرى؛ فلم أجعل فيه ما يختصُّ بفهمه أصحابُ التخصص. وحاولت أن يرى المتدرب النظرية واتصالها بالتطبيق بأسلوب مباشر ليس فيه تطويل الكلام. فهو مناسب للمبتدئ، وكذلك لمن أراد سد فجوات وجدها بعد ممارسة؛ ليعود بأساس قوي متين -بحول الله-.

وهو كذلك معينٌ لمن أراد تدريس البرمجة منطلقًا من لغة بايثون؛ فقد جمعتُ فيه ما تفرَّق ونظمتُه بعد نظرٍ في عدة مؤلفات مماثلة، وعلى ما رأيتُ أنه أنفع للمتعلم بأخصر طريق. ولستُ استغني عن إسهاماتكم. فبرمجية الكتاب مفتوحة ومتاحة على منصة GitHub للمساهمة بالإشكالات، خصوصًا فيما يتعلق بالتطبيقات والمسائل. ومرحبًا بمن أراد البناء.


## لماذا وقع الاختيار على لغة بايثون؟

يقع الاختيار على لغة بايثون كثيرًا لأمور:

- **السهولة**: ففي البداية يحس المتعلم أنه يتعلم لغة إنجليزية بقواعد معيَّنة
- **العموم**: فهي ليست مختصة مثلاً ببرمجيات المواقع فقط؛ بل مجالات تطبيقاتها متنوعة
- **القبول** فالجهود متظافرة على خدمة مكتباتها من المجتمعات التي تتمحور حول نوع ما من التطبيقات. وهذا يسهِّل على الجميع البناء على الجهود المتراكمة.

### مجالات لغة بايثون

وتعتبر المؤسسات لغات البرمجة منتجاتٍ لها. وهذا المنتج -الذي هو لغة البرمجة- كالمطرقة والمنشار بل وصندوق الأدوات كاملًا؛ وسيلة للإنتاج. والتنافُس يشكل تداخلاً في الوظائف التي تخدمها كل لغة، فتجد بعضها يستعمل في تطبيقات الأجهزة الكفية، وبعضها في بناء المواقع، وبعضها في تحليل البيانات ...إلخ. وهي تتداخل.

ومما يشيع استعمال بايثون فيه: 

1. تطبيقات تعلم الآلة والذكاء الاصطناعي
2. [تحليل البيانات وتصويرها](https://www.coursera.org/professional-certificates/google-advanced-data-analytics)
3. [أتمتة العمليات](https://www.coursera.org/professional-certificates/google-it-automation)
4. [تطوير مواقع الشبكة](https://www.coursera.org/professional-certificates/meta-back-end-developer)

وكثيرٌ من التطبيقات يندرج في **أنظمة المعلومات**: التي تختص بجمع المعلومات وحفظها وفهرستها وترتيبها وتقسيمها وعرضها وتسهيل الحصول عليها بالسؤال المباشر وغير المباشر، والتحقق منها وتوفيرها والاستفادة منها وترجمتها ونحو ذلك، مثل:

- محركات البحث كقوقل (يعمل على ترتيب شبكة الإنترنت)
- ونظام الدفع عبر البطاقة أو التداوُل
- وخوادم تطبيقات توصيل الطلبات

فإن كنت تريد البرمجة للدخول في مجال:

- واجهات تطبيقات الجوال
- أو الألعاب
- أو أنظمة التشغيل
- أو صناعة لغات البرمجة

فإن بايثون ليست هي اللغة المناسبة لذلك. لكن لن يضرَّك أن تتعلم بايثون كلغة أولى وتكون بدايتك من هنا.

### اللغة الثانية أسهل

**وليست بايثون مقصودة لذاتها** فمن بساطة البرمجة أن تعلُّمَك للغة الثانية أسهل بمراحل من الأولى؛ إذْ كان عليك أن تتعلم مفاهيم جديدة في أوَّل مرة؛ وهي الآن تتكرر باختلاف يسير. والواقع أن ليسَ ثمة لغة واحدة تحقق كل ما تريد؛ بل يغلب على المشاريع البرمجية تعدد اللغات فيها، وإن كانت مشاريع فردية صغيرة.


## منهجية الكتاب

قُسِّمَ الباب على النحو التالي:

1. **النظرية** فيه المفاهيم والأقسام والقواعد .. وليست فيه أمثلة وتطبيق.
2. **التطبيق**: نرى فيه كيف نضع ما تعلمنا في سياقات مختلفة
3. **التمرين**: يأتي دوْر المتعلم ليرسخ المفاهيم بالممارسة
4. **الحل**: للتحقق من صحَّة حلك للتمرين

### المحاور

نبدأ بمقدمتين:

المقدمة الأولى عن [**لغة البرمجة**](./chapters/01_intro/a1_intro.qmd): مفرداتها وجملها وقواعدها ونموها بالمكتبات الأساسية والخارجية.

المقدمة الثانية عن [**معمارية فون نعيمان**](./chapters/01_intro/a2_intro.qmd): الإحساس والاستيعاب والمعالجة والتخزين.

الباب الثاني عن [**الأعداد**](./chapters/02_numbers/a_numbers): وفيه الحساب والمقارنة، وترتيب العمليات، والتعيين النسبي، ووحدة الرياضيات، ومجموعة الأعداد، وأنواع الأعداد (الصحيح والمنطقي والعشري)، والفرق بين النوع العددي والنصي، وكتابة القيم العددية.

الباب الثالث عن [**الشروط والتكرار**](./chapters/03_control_flow/a_control_flow.qmd): وفيه الجملة الشرطية والتعبيرات المنطقية وتركيب الشروط وتضمين الجمل الشرطية، وجمل التكرار وما يتعلق بها من جمل التحكم في التكرار.

الباب الرابع عن [**الأفعال البرمجية**](./chapters/04_functions/a1_functions.qmd): وفيه تعريف الفعل وعوامله المؤثرة والمتأثرة، وطريقتا تعيين العوامل بالموضع وبالاسم، وتعريف أفعال جديدة بتفاصيلها وتنفيذها، والعوامل الجائزة والواجبة، والتصريح بالنوع، ومفهوم نطاق التسمية، وثمرة الفعل.

ثم [**الجمع المتسلسل**](./chapters/05_sequences/a_sequences.qmd): وفيه المجموعة المرتبة والصف والقائمة، وعمليات الإشارة والتقطيع والتكرار، وعمليات التعديل والإضافة والحذف، والفرز والترتيب.

ثم [**الجمع المرقوم**](./chapters/06_mapping/a_mapping.qmd): وفيه المجموعة والقاموس، وعمليات الإضافة والحذف والتعديل، والبحث والتكرار، والتقاطع والاتحاد والفرق.

ثم [**النص**](./chapters/07_strings/a1_strings.qmd): وفيه النص الطبيعي والمقولب، وإنشاء النص وقراءته، والإشارة والتقطيع، والعمليات الخاصة بالنصوص من استبدال وبحث وفصل ووصل، وتفسير الأرقام وإخراج النص وتنسيقه. وكذلك ترميز يونيكود وتشفير النصوص وتحويلها.

ثم [**صياغة البيانات**](./chapters/08_files_and_directories/a1_serialization.qmd) وانتقالها وتخزينها وقراءتها وكتابتها، وكذلك التعامل مع المجلدات والملفات.


ثم [**الوقت والتاريخ**](./chapters/09_time/a1_time.qmd)؛ وفيه  طريقة التعامل مع الوقت الحاسوبي والمناطق الزمنية والحساب بين الأزمنة والتكرار الزمني.

ثم [**البرمجة الشيئية**](./chapters/10_oop/a1_classes.qmd) ؛ وفيه تعريف الأنواع وصفاتها وأفعالها، ثم التقسيم الاسمي والتقسيم العملي؛ ثم التجريد والتعميم والتركيب والتخصيص والتسلسل.

ثم [**الأخطاء**](./chapters/11_errors/a1_errors.qmd)؛ وفيه الخطأ النحوي والخطأ المنطقي والخطأ الواقعي؛ وكيفية التعامل مع الخطأ المتوقع (الاستثناء).

ثم [**نافذة الأوامر**](./chapters/12_cli/a1_argparse.qmd) وفيه استعمال مكتبة `argparse` لتفسير التعليمات الداخلة على البرنامج من سطر الأوامر، وتحديد العوامل الموضعية والاختيارية، وتعدد القيم للمعامل الواحد، والإلزام، والوصف والاستعمال والأمثلة.

### المصطلح

لعل وصف المفاهيم باللغة الأم أقرب للطبع، وأمكن في الذهن وأوعى، وأوسع في الاختراع والإبداع. فالمفاهيم لا تتعلق باللغة الإنجليزية ولو كانت لغات البرمجة  تكتب بحروفها. ولم أجرِ على ذكر المصطلح دائمًا باللغة الإنجليزية في موضع ذكره باللغة العربية، لأن ذلك كثيرًا ما يقطع تمام الحديث؛ بل المقصود أن يكون المعنى واضحًا من غير الرجوح للترجمة. ومن أراد البحث فلا بد له من الترجمة لذا جعلتها في [جدولٍ خاصٍّ بالمصطلحات](./glossary.qmd).
